@model Dominios.Cliente

@using (Html.BeginForm())
{
    <section class="layout-content">

        <nav class="navbar navbar-expand-md bg-light">
            <div class="collapse navbar-collapse" id="navbarsExampleDefault">
                <ul class="navbar-nav mr-auto">
                    <li class="nav-item active">
                        <i class="fas fa-caret-right"></i>
                        <span>Cadastrar Clientes</span>
                    </li>
                </ul>
            </div>
        </nav>

        <div class="container" id="cadastrarFunc">
            <form action="" method="POST">
                <div class="form-row">
                    <div class="form-group col-md-6">

                        @Html.LabelFor(model => model.nomeCliente, htmlAttributes: new { @class = "control-label col-md-6" })

                        @Html.EditorFor(model => model.nomeCliente, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.nomeCliente, "", new { @class = "text-danger" })

                        @*@Html.LabelFor(model => model.login_id_cli, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.login_id_cli, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.login_id_cli, "", new { @class = "text-danger" })*@

                        <div class="invalid-feedback">

                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.cpfCliente, htmlAttributes: new { @class = "control-label col-md-6" })

                        @Html.EditorFor(model => model.cpfCliente, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.cpfCliente, "", new { @class = "text-danger" })
                        <div class="invalid-feedback">

                        </div>
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-6">

                        @Html.LabelFor(model => model.emailCliente, htmlAttributes: new { @class = "control-label col-md-6" })

                        @Html.EditorFor(model => model.emailCliente, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.emailCliente, "", new { @class = "text-danger" })

                        <div class="invalid-feedback">

                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.sexoCliente, htmlAttributes: new { @class = "control-label col-md-6" })

                        @Html.EditorFor(model => model.sexoCliente, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.sexoCliente, "", new { @class = "text-danger" })
                        <div class="invalid-feedback">

                        </div>
                    </div>
                </div>

                @*__________________________________________TELEFONE______________________________________________________*@
                <div class="form-row">
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.telefone.TipoTelefone, htmlAttributes: new { @class = "control-label col-md-6" })

                        @Html.EditorFor(model => model.telefone.TipoTelefone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.telefone.TipoTelefone, "", new { @class = "text-danger" })
                        <div class="invalid-feedback"></div>
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.telefone.dddTelefone, htmlAttributes: new { @class = "control-label col-md-6" })

                        @Html.EditorFor(model => model.telefone.dddTelefone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.telefone.dddTelefone, "", new { @class = "text-danger" })
                        <div class="invalid-feedback"></div>
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.telefone.numeroTelefone, htmlAttributes: new { @class = "control-label col-md-6" })

                        @Html.EditorFor(model => model.telefone.numeroTelefone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.telefone.numeroTelefone, "", new { @class = "text-danger" })
                        <div class="invalid-feedback"></div>
                    </div>
                </div>
                @*__________________________________________FIM TELEFONE______________________________________________________*@

                <div class="form-row">

                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.dataNascCliente, htmlAttributes: new { @class = "control-label col-md-2" })
                        <
                        @Html.EditorFor(model => model.dataNascCliente, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.dataNascCliente, "", new { @class = "text-danger" })
                        <div class="invalid-feedback">

                        </div>
                    </div>

                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.statusCliente, htmlAttributes: new { @class = "control-label col-md-6" })

                        @Html.EditorFor(model => model.statusCliente, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.statusCliente, "", new { @class = "text-danger" })
                        <div class="invalid-feedback">

                        </div>
                    </div>

                    @*</div>

            <div class="form-row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.bairro_cli, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.bairro_cli, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.bairro_cli, "", new { @class = "text-danger" })
                    <div class="invalid-feedback">

                    </div>
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.cidade_cli, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.cidade_cli, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.cidade_cli, "", new { @class = "text-danger" })
                    <div class="invalid-feedback">

                    </div>
                </div>

            </div>
            <div class="form-row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.uf_id_est, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.uf_id_est, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.uf_id_est, "", new { @class = "text-danger" })
                    <div class="invalid-feedback">

                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.cep_cli, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.cep_cli, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.cep_cli, "", new { @class = "text-danger" })
                    <div class="invalid-feedback">

                    </div>
                </div>

                @*<div class="form-group col-md-8">
                    <label for="complemento">Complemento</label>
                    <input type="text" class="form-control" id="complemento" placeholder="fundos, casa, AP. 102, .."
                           name="endereco.complemento" value="" />
                    <div class="invalid-feedback">

                    </div>
                </div>*@
                    @*</div>

            <div class="form-row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.login_id_cli, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.login_id_cli, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.login_id_cli, "", new { @class = "text-danger" })
                    <div class="invalid-feedback">

                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.senha_cli, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.senha_cli, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.senha_cli, "", new { @class = "text-danger" })
                    <div class="invalid-feedback">

                    </div>
                </div>*@

                </div>


                <input type="hidden" id="id" name="id" value="" />
                <button type="submit" class="btn btn-outline-primary">Cadastrar</button>
            </form>
        </div>
    </section>
    
    <script>
        $(document).ready(function () {
            $("#cpfCliente").inputmask("mask", { "mask": "999.999.999-99" }, { reverse: true });
        });</script>


    @Scripts.Render("~/bundles/inputmask")

}