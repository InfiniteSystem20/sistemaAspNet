@model Dominios.Cliente

@{
    ViewBag.Title = "AtualizarCliente";
}


<h2>AtualizarCliente</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Cliente</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.idCliente, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.idCliente, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.idCliente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nomeCliente, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nomeCliente, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nomeCliente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cpfCliente, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cpfCliente, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cpfCliente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.emailCliente, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.emailCliente, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.emailCliente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sexoCliente, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.sexoCliente, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.sexoCliente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dataNascCliente, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dataNascCliente, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dataNascCliente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.statusCliente, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.statusCliente, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.statusCliente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>
        $(document).ready(function () {
            $("#cpfCliente").inputmask("mask", { "mask": "999.999.999-99" }, { reverse: true });
            $("#telefone.numTel1").inputmask("mask", { "mask": "(99)99999-9999" });
            $("#telefone.numTel2").inputmask("mask", { "mask": "(99)9999-9999" });
            $("#telefone.numTel3").inputmask("mask", { "mask": "(99)9999-9999" });
            $("#dataNascCliente").inputmask("mask", { "mask": "99/99/9999" });
        });
</script>


@Scripts.Render("~/bundles/inputmask")
