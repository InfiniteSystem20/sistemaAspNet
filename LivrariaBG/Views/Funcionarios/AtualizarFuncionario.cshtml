@model Dominios.Funcionario

    <section class="layout-content">

        <nav class="navbar navbar-expand-md bg-light">
            <div class="collapse navbar-collapse" id="navbarsExampleDefault">
                <ul class="navbar-nav mr-auto">
                    <li class="nav-item active">
                        <i class="fas fa-caret-right"></i>
                        <span>Atulalizar Funcionário</span>
                    </li>
                </ul>
            </div>
        </nav>
        <div class="container" id="atualizarFunc">
            <form action="" method="POST">
                @*__________________________________________INICIO 1º LINHA COM MONE____________________________________________*@

                <div class="form-row">
                    <div class="form-group col-md-2">
                        @Html.LabelFor(model => model.idFunc, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.idFunc, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.idFunc, "", new { @class = "text-danger" })
                        <div class="invalid-feedback"></div>
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.nomeFunc, htmlAttributes: new { @class = "control-label col-md-4" })
                        @Html.EditorFor(model => model.nomeFunc, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.nomeFunc, "", new { @class = "text-danger" })
                        <div class="invalid-feedback"></div>
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.cpfFunc, htmlAttributes: new { @class = "control-label col-md-4" })

                        @Html.EditorFor(model => model.cpfFunc, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.cpfFunc, "", new { @class = "text-danger" })
                        <div class="invalid-feedback"> </div>
                    </div>
                    <div class="form-group col-md-2">
                        @Html.LabelFor(model => model.senhaFunc, htmlAttributes: new { @class = "control-label col-md-2" })

                        @Html.EditorFor(model => model.senhaFunc, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.senhaFunc, "", new { @class = "text-danger" })
                        <div class="invalid-feedback"></div>
                    </div>
                </div>
                @*__________________________________________INICIO 2º LINHA COM E-MAIL____________________________________________*@
                <div class="form-row">
                    <div class="form-group col-md-5">
                        @Html.LabelFor(model => model.emailFunc, htmlAttributes: new { @class = "control-label col-md-5" })

                        @Html.EditorFor(model => model.emailFunc, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.emailFunc, "", new { @class = "text-danger" })
                        <div class="invalid-feedback"></div>
                    </div>

                    <div class="form-group col-md-5">
                        @Html.LabelFor(model => model.cargo, htmlAttributes: new { @class = "control-label col-md-5" })

                        @Html.EditorFor(model => model.cargo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.cargo, "", new { @class = "text-danger" })

                    </div>
                    <div class="form-group col-md-2">
                        @Html.LabelFor(model => model.nivelAcesso, htmlAttributes: new { @class = "control-label col-md-2" })

                        @Html.EditorFor(model => model.nivelAcesso, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.nivelAcesso, "", new { @class = "text-danger" })
                        <div class="invalid-feedback"></div>
                    </div>

                </div>
                @*__________________________________________TELEFONE______________________________________________________*@
                <div class="form-row">
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.numTel1, htmlAttributes: new { @class = "control-label col-md-4" })
                        @Html.EditorFor(model => model.numTel1, new { htmlAttributes = new { placeholder = "(99)99999-9999", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.numTel1, "", new { @class = "text-danger" })
                        <div class="invalid-feedback"></div>
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.numTel2, htmlAttributes: new { @class = "control-label col-md-4" })
                        @Html.EditorFor(model => model.numTel2, new { htmlAttributes = new { placeholder = "(99)9999-9999", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.numTel2, "", new { @class = "text-danger" })
                        <div class="invalid-feedback"></div>
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.numTel3, htmlAttributes: new { @class = "control-label col-md-4" })
                        @Html.EditorFor(model => model.numTel3, new { htmlAttributes = new { placeholder = "(99)9999-9999", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.numTel3, "", new { @class = "text-danger" })
                        <div class="invalid-feedback"></div>
                    </div>
                </div>
                @*__________________________________________FIM TELEFONE______________________________________________________*@

                @*__________________________________________INICIO ENDEREÇO LINHA 1___________________________________________*@
                <div class="form-row">
                    <div class="form-group col-md-5">
                        @Html.LabelFor(model => model.logradouro, htmlAttributes: new { @class = "control-label col-md-5" })
                        @Html.EditorFor(model => model.logradouro, new { htmlAttributes = new { placeholder = "Informe o logradouro", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.logradouro, "", new { @class = "text-danger" })
                        <div class="invalid-feedback"></div>
                    </div>
                    <div class="form-group col-md-2">
                        @Html.LabelFor(model => model.numero, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.numero, new { htmlAttributes = new { placeholder = "Número", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.numero, "", new { @class = "text-danger" })
                        <div class="invalid-feedback"></div>
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.complemento, htmlAttributes: new { @class = "control-label col-md-3" })
                        @Html.EditorFor(model => model.complemento, new { htmlAttributes = new { placeholder = "Exemplo casa, apto, loja", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.complemento, "", new { @class = "text-danger" })
                        <div class="invalid-feedback"></div>
                    </div>
                    <div class="form-group col-md-2">
                        @Html.LabelFor(model => model.CEP, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.CEP, new { htmlAttributes = new { placeholder = "99999-999", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CEP, "", new { @class = "text-danger" })
                        <div class="invalid-feedback"></div>
                    </div>

                </div>
                @*__________________________________________INICIO ENDEREÇO LINHA 2___________________________________________*@
                <div class="form-row">
                    <div class="form-group col-md-5">
                        @Html.LabelFor(model => model.bairro, htmlAttributes: new { @class = "control-label col-md-5" })
                        @Html.EditorFor(model => model.bairro, new { htmlAttributes = new { placeholder = "Informe o Bairro", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.bairro, "", new { @class = "text-danger" })
                        <div class="invalid-feedback"></div>
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.cidade, htmlAttributes: new { @class = "control-label col-md-3" })
                        @Html.EditorFor(model => model.cidade, new { htmlAttributes = new { placeholder = "Informe a cidade", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.cidade, "", new { @class = "text-danger" })
                        <div class="invalid-feedback"></div>
                    </div>
                    <div class="form-group col-md-2">
                        @Html.LabelFor(model => model.estado, htmlAttributes: new { @class = "control-label col-md-2" })

                        @Html.EditorFor(model => model.estado, new { htmlAttributes = new { placeholder = "Informe o estado", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
                        <div class="invalid-feedback"></div>
                    </div>
                    <div class="form-group col-md-2">
                        @Html.LabelFor(model => model.UF, htmlAttributes: new { @class = "control-label col-md-2" })

                        @Html.EditorFor(model => model.UF, new { htmlAttributes = new { placeholder = "Informe o UF", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UF, "", new { @class = "text-danger" })
                        <div class="invalid-feedback"></div>
                    </div>

                </div>

                @*__________________________________________FIM ENDEREÇO______________________________________________________*@
                <br />
                <br />
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        <div class="form-actions no-color">
                            <input type="submit" value="Salvar" class="btn btn-primary" /> |

                            <a class="btn btn-primary " href="/Funcionarios/Funcionarios/" role="button">
                                Cancelar
                            </a>
                        </div>

                    </div>
                }

            </form>
        </div>
        @*__________________________________________ FIM ______________________________________________________*@

    </section>

    @*__________________________________________ VALIDAÇÂO FORMULARIO ______________________________________________________*@
    <script>
        $(document).ready(function () {
            $("#cpfFunc").inputmask("mask", { "mask": "999.999.999-99" }, { reverse: true });
            $("#numTel1").inputmask("mask", { "mask": "(99)99999-9999" });
            $("#numTel2").inputmask("mask", { "mask": "(99)9999-9999" });
            $("#CEP").inputmask("mask", { "mask": "99999-999" });
            $("#numTel3").inputmask("mask", { "mask": "(99)9999-9999" });           
        });
    </script>

    @Scripts.Render("~/bundles/inputmask")

   